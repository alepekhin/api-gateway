buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.springframework.cloud:spring-cloud-contract-gradle-plugin:3.1.1'
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	// added later for /actuatpr/info
	id "com.gorylenko.gradle-git-properties" version "2.3.2"
	id 'jacoco'
}

apply plugin: 'spring-cloud-contract'

group = 'alepekhin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	// added later
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

/*
tasks.named('contracts') {
	testFramework = org.springframework.cloud.contract.verifier.config.TestFramework.JUNIT5
}
tasks.named('contractTest') {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}
*/

contracts {
	testFramework = "JUNIT5"
	packageWithBaseClasses = 'alepekhin.apigateway'

}

contractTest {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
}

jacoco {
	toolVersion = "0.8.7"
}

